/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '../../../../app/feed-view/feed-view';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/router/src/router_module';
import * as import4 from '@angular/common/src/localization';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/i18n/tokens';
import * as import7 from '@angular/router/src/router_config_loader';
import * as import8 from '@angular/core/src/linker/view';
import * as import9 from '@angular/core/src/render/api';
import * as import10 from '@angular/core/src/linker/element';
import * as import11 from '@angular/core/src/linker/view_utils';
import * as import12 from '@angular/core/src/linker/view_type';
import * as import13 from '@angular/core/src/change_detection/change_detection';
import * as import14 from '@angular/router/src/router_state';
import * as import15 from '../../../../app/services/api';
import * as import16 from '@angular/core/src/metadata/view';
import * as import17 from '@angular/core/src/linker/component_factory';
import * as import18 from './feed-view.css.shim';
import * as import19 from '../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import20 from '../../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import21 from '@angular/common/src/pipes/async_pipe';
import * as import22 from '@angular/core/src/linker/template_ref';
import * as import23 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import24 from '@angular/common/src/directives/ng_if';
import * as import25 from '@angular/common/src/directives/ng_for';
import * as import26 from './spinner.component.ngfactory';
import * as import27 from '../../../../app/feed-view/spinner.component';
import * as import28 from './list.component.ngfactory';
import * as import29 from '../../../../app/feed-view/list.component';
class FeedViewModuleInjector extends import0.NgModuleInjector<import1.FeedViewModule> {
  _CommonModule_0:import2.CommonModule;
  _RouterModule_1:import3.RouterModule;
  _FeedViewModule_2:import1.FeedViewModule;
  __NgLocalization_3:import4.NgLocaleLocalization;
  __ROUTES_4:any[];
  constructor(parent:import5.Injector) {
    super(parent,[FeedViewNgFactory],([] as any[]));
  }
  get _NgLocalization_3():import4.NgLocaleLocalization {
    if ((this.__NgLocalization_3 == (null as any))) { (this.__NgLocalization_3 = new import4.NgLocaleLocalization(this.parent.get(import6.LOCALE_ID))); }
    return this.__NgLocalization_3;
  }
  get _ROUTES_4():any[] {
        if ((this.__ROUTES_4 == (null as any))) { (this.__ROUTES_4 = [[{
          path: ':section',
          component: import1.FeedView
        }
    ]]); }
    return this.__ROUTES_4;
  }
  createInternal():import1.FeedViewModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._RouterModule_1 = new import3.RouterModule(this.parent.get(import3.ROUTER_FORROOT_GUARD,(null as any)));
    this._FeedViewModule_2 = new import1.FeedViewModule();
    return this._FeedViewModule_2;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import3.RouterModule)) { return this._RouterModule_1; }
    if ((token === import1.FeedViewModule)) { return this._FeedViewModule_2; }
    if ((token === import4.NgLocalization)) { return this._NgLocalization_3; }
    if ((token === import7.ROUTES)) { return this._ROUTES_4; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const FeedViewModuleNgFactory:import0.NgModuleFactory<import1.FeedViewModule> = new import0.NgModuleFactory(FeedViewModuleInjector,import1.FeedViewModule);
export class Wrapper_FeedView {
  context:import1.FeedView;
  changed:boolean;
  constructor(p0:any,p1:any) {
    this.changed = false;
    this.context = new import1.FeedView(p0,p1);
  }
  detectChangesInternal(view:import8.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
}
var renderType_FeedView_Host:import9.RenderComponentType = (null as any);
class _View_FeedView_Host0 extends import8.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import10.AppElement;
  _FeedView_0_4:Wrapper_FeedView;
  constructor(viewUtils:import11.ViewUtils,parentInjector:import5.Injector,declarationEl:import10.AppElement) {
    super(_View_FeedView_Host0,renderType_FeedView_Host,import12.ViewType.HOST,viewUtils,parentInjector,declarationEl,import13.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import10.AppElement {
    this._el_0 = this.selectOrCreateHostElement('feed-view',rootSelector,(null as any));
    this._appEl_0 = new import10.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_FeedView0(this.viewUtils,this.injector(0),this._appEl_0);
    this._FeedView_0_4 = new Wrapper_FeedView(this.parentInjector.get(import14.ActivatedRoute),this.parentInjector.get(import15.HackerNewsAPI));
    this._appEl_0.initComponent(this._FeedView_0_4.context,([] as any[]),compView_0);
    compView_0.create(this._FeedView_0_4.context,this.projectableNodes,(null as any));
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.FeedView) && (0 === requestNodeIndex))) { return this._FeedView_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._FeedView_0_4.detectChangesInternal(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_FeedView_Host0(viewUtils:import11.ViewUtils,parentInjector:import5.Injector,declarationEl:import10.AppElement):import8.AppView<any> {
  if ((renderType_FeedView_Host === (null as any))) { (renderType_FeedView_Host = viewUtils.createRenderComponentType('',0,import16.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_FeedView_Host0(viewUtils,parentInjector,declarationEl);
}
export const FeedViewNgFactory:import17.ComponentFactory<import1.FeedView> = new import17.ComponentFactory<import1.FeedView>('feed-view',viewFactory_FeedView_Host0,import1.FeedView);
const styles_FeedView:any[] = [import18.styles];
var renderType_FeedView:import9.RenderComponentType = (null as any);
class _View_FeedView0 extends import8.AppView<import1.FeedView> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _appEl_3:import10.AppElement;
  _TemplateRef_3_5:any;
  _NgIf_3_6:import19.Wrapper_NgIf;
  _text_4:any;
  _el_5:any;
  _text_6:any;
  _text_7:any;
  _el_8:any;
  _text_9:any;
  _el_10:any;
  _text_11:any;
  _anchor_12:any;
  /*private*/ _appEl_12:import10.AppElement;
  _TemplateRef_12_5:any;
  _NgFor_12_6:import20.Wrapper_NgFor;
  _text_13:any;
  _text_14:any;
  _text_15:any;
  _text_16:any;
  _pipe_async_0:import21.AsyncPipe;
  constructor(viewUtils:import11.ViewUtils,parentInjector:import5.Injector,declarationEl:import10.AppElement) {
    super(_View_FeedView0,renderType_FeedView,import12.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import13.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import10.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_1,'class','news-view');
    this._text_2 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._appEl_3 = new import10.AppElement(3,1,this,this._anchor_3);
    this._TemplateRef_3_5 = new import22.TemplateRef_(this._appEl_3,viewFactory_FeedView1);
    this._NgIf_3_6 = new import19.Wrapper_NgIf(this._appEl_3.vcRef,this._TemplateRef_3_5);
    this._text_4 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._el_5 = this.renderer.createElement(this._el_1,'div',(null as any));
    this.renderer.setElementAttribute(this._el_5,'class','news-list-nav');
    this._text_6 = this.renderer.createText(this._el_5,'\n      nav\n    ',(null as any));
    this._text_7 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._el_8 = this.renderer.createElement(this._el_1,'div',(null as any));
    this.renderer.setElementAttribute(this._el_8,'class','news-list');
    this._text_9 = this.renderer.createText(this._el_8,'\n      ',(null as any));
    this._el_10 = this.renderer.createElement(this._el_8,'ul',(null as any));
    this._text_11 = this.renderer.createText(this._el_10,'\n        ',(null as any));
    this._anchor_12 = this.renderer.createTemplateAnchor(this._el_10,(null as any));
    this._appEl_12 = new import10.AppElement(12,10,this,this._anchor_12);
    this._TemplateRef_12_5 = new import22.TemplateRef_(this._appEl_12,viewFactory_FeedView2);
    this._NgFor_12_6 = new import20.Wrapper_NgFor(this._appEl_12.vcRef,this._TemplateRef_12_5,this.parentInjector.get(import23.IterableDiffers),this.ref);
    this._text_13 = this.renderer.createText(this._el_10,'\n      ',(null as any));
    this._text_14 = this.renderer.createText(this._el_8,'\n      ',(null as any));
    this._text_15 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._text_16 = this.renderer.createText(parentRenderNode,'\n\n  ',(null as any));
    this._pipe_async_0 = new import21.AsyncPipe(this.ref);
    this.init(([] as any[]),[
      this._text_0,
      this._el_1,
      this._text_2,
      this._anchor_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._anchor_12,
      this._text_13,
      this._text_14,
      this._text_15,
      this._text_16
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import22.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import24.NgIf) && (3 === requestNodeIndex))) { return this._NgIf_3_6.context; }
    if (((token === import22.TemplateRef) && (12 === requestNodeIndex))) { return this._TemplateRef_12_5; }
    if (((token === import25.NgFor) && (12 === requestNodeIndex))) { return this._NgFor_12_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const valUnwrapper:any = new import13.ValueUnwrapper();
    const currVal_0:boolean = !this.context.stories;
    this._NgIf_3_6.check_ngIf(currVal_0,throwOnChange,false);
    this._NgIf_3_6.detectChangesInternal(this,this._anchor_3,throwOnChange);
    valUnwrapper.reset();
    const currVal_1:any = valUnwrapper.unwrap(this._pipe_async_0.transform(this.context.stories));
    this._NgFor_12_6.check_ngForOf(currVal_1,throwOnChange,valUnwrapper.hasWrappedValue);
    const currVal_2:any = this.context.trackStory;
    this._NgFor_12_6.check_ngForTrackBy(currVal_2,throwOnChange,false);
    this._NgFor_12_6.detectChangesInternal(this,this._anchor_12,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._pipe_async_0.ngOnDestroy();
  }
}
export function viewFactory_FeedView0(viewUtils:import11.ViewUtils,parentInjector:import5.Injector,declarationEl:import10.AppElement):import8.AppView<import1.FeedView> {
  if ((renderType_FeedView === (null as any))) { (renderType_FeedView = viewUtils.createRenderComponentType('',0,import16.ViewEncapsulation.Emulated,styles_FeedView,{})); }
  return new _View_FeedView0(viewUtils,parentInjector,declarationEl);
}
class _View_FeedView1 extends import8.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import10.AppElement;
  _Spinner_0_4:import26.Wrapper_Spinner;
  _text_1:any;
  constructor(viewUtils:import11.ViewUtils,parentInjector:import5.Injector,declarationEl:import10.AppElement) {
    super(_View_FeedView1,renderType_FeedView,import12.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import13.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import10.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'loading-spinner',(null as any));
    this._appEl_0 = new import10.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = import26.viewFactory_Spinner0(this.viewUtils,this.injector(0),this._appEl_0);
    this._Spinner_0_4 = new import26.Wrapper_Spinner();
    this._appEl_0.initComponent(this._Spinner_0_4.context,([] as any[]),compView_0);
    this._text_1 = this.renderer.createText((null as any),'loading...',(null as any));
    compView_0.create(this._Spinner_0_4.context,([] as any[]),(null as any));
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._text_1
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import27.Spinner) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._Spinner_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._Spinner_0_4.detectChangesInternal(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_FeedView1(viewUtils:import11.ViewUtils,parentInjector:import5.Injector,declarationEl:import10.AppElement):import8.AppView<any> {
  return new _View_FeedView1(viewUtils,parentInjector,declarationEl);
}
class _View_FeedView2 extends import8.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import10.AppElement;
  _ListItem_0_4:import28.Wrapper_ListItem;
  constructor(viewUtils:import11.ViewUtils,parentInjector:import5.Injector,declarationEl:import10.AppElement) {
    super(_View_FeedView2,renderType_FeedView,import12.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import13.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import10.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'li',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','list-item');
    this.renderer.setElementAttribute(this._el_0,'list-item','');
    this._appEl_0 = new import10.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = import28.viewFactory_ListItem0(this.viewUtils,this.injector(0),this._appEl_0);
    this._ListItem_0_4 = new import28.Wrapper_ListItem();
    this._appEl_0.initComponent(this._ListItem_0_4.context,([] as any[]),compView_0);
    compView_0.create(this._ListItem_0_4.context,([] as any[]),(null as any));
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import29.ListItem) && (0 === requestNodeIndex))) { return this._ListItem_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0:any = this.context.$implicit;
    this._ListItem_0_4.check_item(currVal_0,throwOnChange,false);
    this._ListItem_0_4.detectChangesInternal(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_FeedView2(viewUtils:import11.ViewUtils,parentInjector:import5.Injector,declarationEl:import10.AppElement):import8.AppView<any> {
  return new _View_FeedView2(viewUtils,parentInjector,declarationEl);
}